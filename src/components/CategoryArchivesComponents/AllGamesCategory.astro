---
const { heading, categoryId } = Astro.props;
---

<div class="swiper swiper4 py-2 my-12 mx-2">
  <div class="mb-4">
    <h2 class="text-[#ff688b] text-3xl font-bold font-giloryExtrabold">
      {heading}
    </h2>
  </div>
  <!-- Additional required wrapper -->
  <div
    class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4"
    id="postsContainer"
  >
    <!-- Posts will be rendered here -->
  </div>
  <button
    id="loadMoreButton"
    class="bg-white border-2 border-[#2ea3f2] text-[#2ea3f2] py-4 px-12 rounded-full mt-4 font-giloryBold text-lg mx-auto inline-block"
    >Load More</button
  >
</div>

<script define:vars={{ categoryId }}>
  let endCursor = null; // Track the current endCursor

  const fetchPosts = async () => {
    try {
      const response = await fetch("https://slotsstg.wpengine.com/graphql", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          query: `
            query GamesPage($endCursor: String) {
              posts(first: 20, where: {categoryId: ${categoryId}}, after: $endCursor) {
                edges {
                  node {
                    title
                    slug
                    featuredImage {
                      node {
                        altText
                        title
                        sourceUrl
                      }
                    }
                    link
                    uri
                  }
                }
                pageInfo {
                  hasNextPage
                  endCursor
                }
              }
            }
          `,
          variables: {
            endCursor: endCursor, // Pass the current endCursor
          },
        }),
      });

      const { data } = await response.json();

      // Get the container element where posts will be rendered
      const postsContainer = document.getElementById("postsContainer");

      // Render posts
      data.posts.edges.forEach((post) => {
        const postElement = document.createElement("article");
        postElement.classList.add(
          "home-slider-article",
          "rounded-[3px]",
          "bg-white",
          "shadow-homePosts",
          "overflow-hidden",
          "border",
          "border-[#EAEAEA]"
        );

        postElement.innerHTML = `
          <a class="entry-featured-image-url mb-5" href="${post.node.uri}">
            <img class="games-Image reco w-full h-[228px]" width="328" height="223" alt="${post.node.title}" title="${post.node.title}" src="${post.node.featuredImage?.node?.sourceUrl}">
          </a>

          <div class="entry-title text-[#2f0536] font-gilorybold py-5 mx-2">
            <h4 class="mb-0">
              <a href="${post.node.uri}" class="font-extrabold text-[18px] whitespace-nowrap w-[90%] overflow-hidden">
                ${post.node.title}
              </a>
            </h4>
          </div>
        `;

        postsContainer.appendChild(postElement);
      });

      // Update the endCursor for the next fetch
      endCursor = data.posts.pageInfo.endCursor;

      // Show/hide the load more button based on hasNextPage
      document.getElementById("loadMoreButton").style.display = data.posts
        .pageInfo.hasNextPage
        ? "block"
        : "none";
    } catch (error) {
      console.error("Error fetching posts:", error);
    }
  };

  // Load more button event handler
  document
    .getElementById("loadMoreButton")
    .addEventListener("click", fetchPosts);

  // Initial fetch when the script is executed
  fetchPosts();
</script>
