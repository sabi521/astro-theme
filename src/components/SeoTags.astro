---
import { seoNodeByURI } from '../lib/seo';

// Set the URI based on whether it's the main page or a specific URI
const uri = Astro.params.uri ? `/${Astro.params.uri}/` : '/';

console.log(uri);

const data = await seoNodeByURI(uri);

const node = data.nodeByUri && data.nodeByUri.seo ? data.nodeByUri : null;

const seo = node ? node.seo : null;

//console.log(seo);


//console.log(seo);
---

<meta name="description" content={seo?.metaDesc} />
<link rel="canonical" href={seo?.canonical} />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content={seo?.opengraphType} />
<meta property="og:title" content={seo?.title} />
<meta property="og:description" content={seo?.opengraphDescription} />
<meta property="og:url" content={seo?.opengraphUrl} />
<meta property="og:site_name" content={seo?.opengraphSiteName} />
<meta property="article:published_time" content={seo?.opengraphPublishedTime} />
<meta property="article:modified_time" content={seo?.opengraphModifiedTime} />
<meta property="og:image" content={seo?.opengraphImage?.sourceUrl} />
<meta property="og:image:width" content="1200" />
<meta property="og:image:height" content="667" />
<meta property="og:image:type" content={seo?.opengraphImage?.mimeType} />
<meta name="author" content={seo?.opengraphImage?.author?.node?.name} />
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:label1" content="Written by" />
<meta name="twitter:data1" content={seo?.opengraphImage?.author?.node?.name} />
<meta name="twitter:label2" content="Est. reading time" />
<meta name="twitter:data2" content=`${seo?.readingTime} minutes` />
<script type="application/ld+json" class="yoast-schema-graph" set:html={seo?.schema.raw}>
</script>
